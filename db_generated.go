// generated by dbgen ; DO NOT EDIT

package main

//
// Vendor DBObject interface functions
//
func (o *Vendor) InsertValues() []interface{} {
	return []interface{}{o.Name, o.Phone}
}

func (o *Vendor) UpdateValues() []interface{} {
	return []interface{}{o.Name, o.Phone, o.VID}
}

func (o *Vendor) MemberPointers() []interface{} {
	return []interface{}{&o.VID, &o.Name, &o.Phone}
}

func (o *Vendor) Key() int64 {
	return o.VID
}

func (o *Vendor) SetID(id int64) {
	o.VID = id
}

func (o *Vendor) TableName() string {
	return "vendors"
}

func (o *Vendor) SelectFields() string {
	return "vid,name,phone"
}
func (o *Vendor) KeyField() string {
	return "vid"
}

//
// Contract DBObject interface functions
//
func (o *Contract) InsertValues() []interface{} {
	return []interface{}{o.VID, o.Policy, o.Phone}
}

func (o *Contract) UpdateValues() []interface{} {
	return []interface{}{o.VID, o.Policy, o.Phone, o.CID}
}

func (o *Contract) MemberPointers() []interface{} {
	return []interface{}{&o.CID, &o.VID, &o.Policy, &o.Phone}
}

func (o *Contract) Key() int64 {
	return o.CID
}

func (o *Contract) SetID(id int64) {
	o.CID = id
}

func (o *Contract) TableName() string {
	return "contracts"
}

func (o *Contract) SelectFields() string {
	return "cid,vid,policy,phone"
}
func (o *Contract) KeyField() string {
	return "cid"
}

//
// Device DBObject interface functions
//
func (o *Device) InsertValues() []interface{} {
	return []interface{}{o.MgmtMac, o.Note, o.VID, o.Type, o.MgmtIP, o.SerialNo, o.Modified, o.UID, o.CID, o.RID, o.RU, o.AssetTag, o.RemoteAddr, o.Height, o.PrimaryIP, o.Hostname, o.PrimaryMac, o.Model}
}

func (o *Device) UpdateValues() []interface{} {
	return []interface{}{o.MgmtMac, o.Note, o.VID, o.Type, o.MgmtIP, o.SerialNo, o.Modified, o.UID, o.CID, o.RID, o.RU, o.AssetTag, o.RemoteAddr, o.Height, o.PrimaryIP, o.Hostname, o.PrimaryMac, o.Model, o.DID}
}

func (o *Device) MemberPointers() []interface{} {
	return []interface{}{&o.DID, &o.MgmtMac, &o.Note, &o.VID, &o.Type, &o.MgmtIP, &o.SerialNo, &o.Modified, &o.UID, &o.CID, &o.RID, &o.RU, &o.AssetTag, &o.RemoteAddr, &o.Height, &o.PrimaryIP, &o.Hostname, &o.PrimaryMac, &o.Model}
}

func (o *Device) Key() int64 {
	return o.DID
}

func (o *Device) SetID(id int64) {
	o.DID = id
}

func (o *Device) TableName() string {
	return "devices"
}

func (o *Device) SelectFields() string {
	return "did,mgmt_mac,note,vid,device_type,mgmt_ip,sn,modified,uid,cid,rid,ru,asset_tag,remote_addr,height,primary_ip,hostname,primary_mac,model"
}
func (o *Device) KeyField() string {
	return "did"
}

//
// Port DBObject interface functions
//
func (o *Port) InsertValues() []interface{} {
	return []interface{}{o.UID, o.DID, o.PortType, o.MAC, o.CableTag, o.SwitchPort, o.RemoteAddr, o.Modified}
}

func (o *Port) UpdateValues() []interface{} {
	return []interface{}{o.UID, o.DID, o.PortType, o.MAC, o.CableTag, o.SwitchPort, o.RemoteAddr, o.Modified, o.PID}
}

func (o *Port) MemberPointers() []interface{} {
	return []interface{}{&o.PID, &o.UID, &o.DID, &o.PortType, &o.MAC, &o.CableTag, &o.SwitchPort, &o.RemoteAddr, &o.Modified}
}

func (o *Port) Key() int64 {
	return o.PID
}

func (o *Port) SetID(id int64) {
	o.PID = id
}

func (o *Port) TableName() string {
	return "ports"
}

func (o *Port) SelectFields() string {
	return "pid,uid,did,port_type,mac,cable_tag,switch_port,remote_addr,modified"
}
func (o *Port) KeyField() string {
	return "pid"
}

//
// IP DBObject interface functions
//
func (o *IP) InsertValues() []interface{} {
	return []interface{}{o.Type, o.Int, o.RemoteAddr, o.Modified, o.UID, o.DID}
}

func (o *IP) UpdateValues() []interface{} {
	return []interface{}{o.Type, o.Int, o.RemoteAddr, o.Modified, o.UID, o.DID, o.IID}
}

func (o *IP) MemberPointers() []interface{} {
	return []interface{}{&o.IID, &o.Type, &o.Int, &o.RemoteAddr, &o.Modified, &o.UID, &o.DID}
}

func (o *IP) Key() int64 {
	return o.IID
}

func (o *IP) SetID(id int64) {
	o.IID = id
}

func (o *IP) TableName() string {
	return "ips"
}

func (o *IP) SelectFields() string {
	return "iid,ip_type,ip_int,remote_addr,modified,uid,did"
}
func (o *IP) KeyField() string {
	return "iid"
}

//
// User DBObject interface functions
//
func (o *User) InsertValues() []interface{} {
	return []interface{}{o.Login, o.First, o.Last, o.Email, o.Password, o.Level}
}

func (o *User) UpdateValues() []interface{} {
	return []interface{}{o.Login, o.First, o.Last, o.Email, o.Password, o.Level, o.ID}
}

func (o *User) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.Login, &o.First, &o.Last, &o.Email, &o.Password, &o.Level}
}

func (o *User) Key() int64 {
	return o.ID
}

func (o *User) SetID(id int64) {
	o.ID = id
}

func (o *User) TableName() string {
	return "users"
}

func (o *User) SelectFields() string {
	return "id,login,firstname,lastname,email,password,admin"
}
func (o *User) KeyField() string {
	return "id"
}

//
// Datacenter DBObject interface functions
//
func (o *Datacenter) InsertValues() []interface{} {
	return []interface{}{o.UID, o.Name, o.Location, o.Modified, o.RemoteAddr}
}

func (o *Datacenter) UpdateValues() []interface{} {
	return []interface{}{o.UID, o.Name, o.Location, o.Modified, o.RemoteAddr, o.ID}
}

func (o *Datacenter) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.UID, &o.Name, &o.Location, &o.Modified, &o.RemoteAddr}
}

func (o *Datacenter) Key() int64 {
	return o.ID
}

func (o *Datacenter) SetID(id int64) {
	o.ID = id
}

func (o *Datacenter) TableName() string {
	return "datacenters"
}

func (o *Datacenter) SelectFields() string {
	return "id,uid,name,location,modified,remote_addr"
}
func (o *Datacenter) KeyField() string {
	return "id"
}

//
// DCView DBObject interface functions
//
func (o *DCView) InsertValues() []interface{} {
	return []interface{}{o.DID, o.Hostname, o.AssetNumber, o.CPU, o.CPU_Speed, o.MemoryMB, o.Created}
}

func (o *DCView) UpdateValues() []interface{} {
	return []interface{}{o.DID, o.Hostname, o.AssetNumber, o.CPU, o.CPU_Speed, o.MemoryMB, o.Created, o.ID}
}

func (o *DCView) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.DID, &o.Hostname, &o.AssetNumber, &o.CPU, &o.CPU_Speed, &o.MemoryMB, &o.Created}
}

func (o *DCView) Key() int64 {
	return o.ID
}

func (o *DCView) SetID(id int64) {
	o.ID = id
}

func (o *DCView) TableName() string {
	return "dcview"
}

func (o *DCView) SelectFields() string {
	return "id,datacenter,hostname,asset_number,cpu_id,cpu_speed,memory,created"
}
func (o *DCView) KeyField() string {
	return "id"
}

//
// ServerVMs DBObject interface functions
//
func (o *ServerVMs) InsertValues() []interface{} {
	return []interface{}{o.DC, o.Hostname, o.VMList, o.IDList}
}

func (o *ServerVMs) UpdateValues() []interface{} {
	return []interface{}{o.DC, o.Hostname, o.VMList, o.IDList, o.ID}
}

func (o *ServerVMs) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.DC, &o.Hostname, &o.VMList, &o.IDList}
}

func (o *ServerVMs) Key() int64 {
	return o.ID
}

func (o *ServerVMs) SetID(id int64) {
	o.ID = id
}

func (o *ServerVMs) TableName() string {
	return "servervms"
}

func (o *ServerVMs) SelectFields() string {
	return "id,dc,hostname,vms,ids"
}
func (o *ServerVMs) KeyField() string {
	return "id"
}

//
// RackUnit DBObject interface functions
//
func (o *RackUnit) InsertValues() []interface{} {
	return []interface{}{o.SID, o.RU, o.Height, o.Hostname, o.AssetTag, o.DC, o.Rack, o.NID, o.RID, o.Alias, o.IPMI, o.Internal}
}

func (o *RackUnit) UpdateValues() []interface{} {
	return []interface{}{o.SID, o.RU, o.Height, o.Hostname, o.AssetTag, o.DC, o.Rack, o.NID, o.RID, o.Alias, o.IPMI, o.Internal}
}

func (o *RackUnit) MemberPointers() []interface{} {
	return []interface{}{&o.SID, &o.RU, &o.Height, &o.Hostname, &o.AssetTag, &o.DC, &o.Rack, &o.NID, &o.RID, &o.Alias, &o.IPMI, &o.Internal}
}

func (o *RackUnit) Key() int64 {
	return 0
}

func (o *RackUnit) SetID(id int64) {
}

func (o *RackUnit) TableName() string {
	return "rackunits"
}

func (o *RackUnit) SelectFields() string {
	return "sid,ru,height,hostname,asset_tag,dc,rack,nid,rid,alias,ipmi,internal"
}
func (o *RackUnit) KeyField() string {
	return ""
}

//
// Server DBObject interface functions
//
func (o *Server) InsertValues() []interface{} {
	return []interface{}{o.MacIPMI, o.UID, o.PartNo, o.IPPublic, o.PortEth1, o.CableIpmi, o.Modified, o.RemoteAddr, o.RU, o.CableEth1, o.MacPort0, o.PortIpmi, o.MacPort1, o.Profile, o.IPInternal, o.CPU, o.Assigned, o.Note, o.Alias, o.AssetTag, o.IPIpmi, o.CableEth0, o.RID, o.Hostname, o.SerialNo, o.PortEth0, o.Height}
}

func (o *Server) UpdateValues() []interface{} {
	return []interface{}{o.MacIPMI, o.UID, o.PartNo, o.IPPublic, o.PortEth1, o.CableIpmi, o.Modified, o.RemoteAddr, o.RU, o.CableEth1, o.MacPort0, o.PortIpmi, o.MacPort1, o.Profile, o.IPInternal, o.CPU, o.Assigned, o.Note, o.Alias, o.AssetTag, o.IPIpmi, o.CableEth0, o.RID, o.Hostname, o.SerialNo, o.PortEth0, o.Height, o.ID}
}

func (o *Server) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.MacIPMI, &o.UID, &o.PartNo, &o.IPPublic, &o.PortEth1, &o.CableIpmi, &o.Modified, &o.RemoteAddr, &o.RU, &o.CableEth1, &o.MacPort0, &o.PortIpmi, &o.MacPort1, &o.Profile, &o.IPInternal, &o.CPU, &o.Assigned, &o.Note, &o.Alias, &o.AssetTag, &o.IPIpmi, &o.CableEth0, &o.RID, &o.Hostname, &o.SerialNo, &o.PortEth0, &o.Height}
}

func (o *Server) Key() int64 {
	return o.ID
}

func (o *Server) SetID(id int64) {
	o.ID = id
}

func (o *Server) TableName() string {
	return "servers"
}

func (o *Server) SelectFields() string {
	return "id,mac_ipmi,uid,vendor_sku,ip_public,port_eth1,cable_ipmi,modified,remote_addr,ru,cable_eth1,mac_eth0,port_ipmi,mac_eth1,profile,ip_internal,cpu,assigned,note,alias,asset_tag,ip_ipmi,cable_eth0,rid,hostname,sn,port_eth0,height"
}
func (o *Server) KeyField() string {
	return "id"
}

//
// Router DBObject interface functions
//
func (o *Router) InsertValues() []interface{} {
	return []interface{}{o.SerialNo, o.RemoteAddr, o.Make, o.PartNo, o.Modified, o.Height, o.Model, o.Note, o.UID, o.RID, o.RU, o.Hostname, o.AssetTag, o.MgmtIP}
}

func (o *Router) UpdateValues() []interface{} {
	return []interface{}{o.SerialNo, o.RemoteAddr, o.Make, o.PartNo, o.Modified, o.Height, o.Model, o.Note, o.UID, o.RID, o.RU, o.Hostname, o.AssetTag, o.MgmtIP, o.ID}
}

func (o *Router) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.SerialNo, &o.RemoteAddr, &o.Make, &o.PartNo, &o.Modified, &o.Height, &o.Model, &o.Note, &o.UID, &o.RID, &o.RU, &o.Hostname, &o.AssetTag, &o.MgmtIP}
}

func (o *Router) Key() int64 {
	return o.ID
}

func (o *Router) SetID(id int64) {
	o.ID = id
}

func (o *Router) TableName() string {
	return "routers"
}

func (o *Router) SelectFields() string {
	return "id,sn,remote_addr,make,sku,modified,height,model,note,uid,rid,ru,hostname,asset_tag,ip_mgmt"
}
func (o *Router) KeyField() string {
	return "id"
}

//
// Rack DBObject interface functions
//
func (o *Rack) InsertValues() []interface{} {
	return []interface{}{o.Label, o.VendorID, o.XPos, o.YPos, o.UID, o.TS, o.DID, o.RUs}
}

func (o *Rack) UpdateValues() []interface{} {
	return []interface{}{o.Label, o.VendorID, o.XPos, o.YPos, o.UID, o.TS, o.DID, o.RUs, o.ID}
}

func (o *Rack) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.Label, &o.VendorID, &o.XPos, &o.YPos, &o.UID, &o.TS, &o.DID, &o.RUs}
}

func (o *Rack) Key() int64 {
	return o.ID
}

func (o *Rack) SetID(id int64) {
	o.ID = id
}

func (o *Rack) TableName() string {
	return "racks"
}

func (o *Rack) SelectFields() string {
	return "id,rack,vendor_id,x_pos,y_pos,uid,ts,did,rackunits"
}
func (o *Rack) KeyField() string {
	return "id"
}

//
// RackNet DBObject interface functions
//
func (o *RackNet) InsertValues() []interface{} {
	return []interface{}{o.Actual, o.FirstIP, o.LastIP, o.RID, o.CIDR, o.MinIP, o.MaxIP, o.VID, o.Subnet}
}

func (o *RackNet) UpdateValues() []interface{} {
	return []interface{}{o.Actual, o.FirstIP, o.LastIP, o.RID, o.CIDR, o.MinIP, o.MaxIP, o.VID, o.Subnet}
}

func (o *RackNet) MemberPointers() []interface{} {
	return []interface{}{&o.Actual, &o.FirstIP, &o.LastIP, &o.RID, &o.CIDR, &o.MinIP, &o.MaxIP, &o.VID, &o.Subnet}
}

func (o *RackNet) Key() int64 {
	return 0
}

func (o *RackNet) SetID(id int64) {
}

func (o *RackNet) TableName() string {
	return "racknet"
}

func (o *RackNet) SelectFields() string {
	return "actual,first_ip,last_ip,rid,cidr,min_ip,max_ip,vid,subnet"
}
func (o *RackNet) KeyField() string {
	return ""
}

//
// VM DBObject interface functions
//
func (o *VM) InsertValues() []interface{} {
	return []interface{}{o.Public, o.VIP, o.Profile, o.RemoteAddr, o.SID, o.Hostname, o.Private, o.Note, o.Modified, o.UID}
}

func (o *VM) UpdateValues() []interface{} {
	return []interface{}{o.Public, o.VIP, o.Profile, o.RemoteAddr, o.SID, o.Hostname, o.Private, o.Note, o.Modified, o.UID, o.ID}
}

func (o *VM) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.Public, &o.VIP, &o.Profile, &o.RemoteAddr, &o.SID, &o.Hostname, &o.Private, &o.Note, &o.Modified, &o.UID}
}

func (o *VM) Key() int64 {
	return o.ID
}

func (o *VM) SetID(id int64) {
	o.ID = id
}

func (o *VM) TableName() string {
	return "vms"
}

func (o *VM) SelectFields() string {
	return "id,public,vip,profile,remote_addr,sid,hostname,private,note,modified,uid"
}
func (o *VM) KeyField() string {
	return "id"
}

//
// Orphan DBObject interface functions
//
func (o *Orphan) InsertValues() []interface{} {
	return []interface{}{o.DC, o.Hostname, o.Private, o.Public, o.VIP, o.Note}
}

func (o *Orphan) UpdateValues() []interface{} {
	return []interface{}{o.DC, o.Hostname, o.Private, o.Public, o.VIP, o.Note, o.ID}
}

func (o *Orphan) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.DC, &o.Hostname, &o.Private, &o.Public, &o.VIP, &o.Note}
}

func (o *Orphan) Key() int64 {
	return o.ID
}

func (o *Orphan) SetID(id int64) {
	o.ID = id
}

func (o *Orphan) TableName() string {
	return "vmbad"
}

func (o *Orphan) SelectFields() string {
	return "rowid,dc,hostname,private,public,vip,note"
}
func (o *Orphan) KeyField() string {
	return "rowid"
}

//
// Audit DBObject interface functions
//
func (o *Audit) InsertValues() []interface{} {
	return []interface{}{o.IPMI_IP, o.VMs, o.IP, o.Eth0, o.FQDN, o.SN, o.IPMI_MAC, o.CPU, o.Mem, o.Kernel, o.Release, o.Hostname, o.IPs, o.Eth1, o.Asset}
}

func (o *Audit) UpdateValues() []interface{} {
	return []interface{}{o.IPMI_IP, o.VMs, o.IP, o.Eth0, o.FQDN, o.SN, o.IPMI_MAC, o.CPU, o.Mem, o.Kernel, o.Release, o.Hostname, o.IPs, o.Eth1, o.Asset}
}

func (o *Audit) MemberPointers() []interface{} {
	return []interface{}{&o.IPMI_IP, &o.VMs, &o.IP, &o.Eth0, &o.FQDN, &o.SN, &o.IPMI_MAC, &o.CPU, &o.Mem, &o.Kernel, &o.Release, &o.Hostname, &o.IPs, &o.Eth1, &o.Asset}
}

func (o *Audit) Key() int64 {
	return 0
}

func (o *Audit) SetID(id int64) {
}

func (o *Audit) TableName() string {
	return "auditing"
}

func (o *Audit) SelectFields() string {
	return "ipmi_ip,vms,remote_addr,eth0,fqdn,sn,ipmi_mac,cpu,mem,kernel,release,hostname,ips,eth1,asset"
}
func (o *Audit) KeyField() string {
	return ""
}

//
// PDU DBObject interface functions
//
func (o *PDU) InsertValues() []interface{} {
	return []interface{}{o.AssetTag, o.RID, o.Hostname, o.IP, o.Netmask, o.Gateway, o.DNS}
}

func (o *PDU) UpdateValues() []interface{} {
	return []interface{}{o.AssetTag, o.RID, o.Hostname, o.IP, o.Netmask, o.Gateway, o.DNS, o.ID}
}

func (o *PDU) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.AssetTag, &o.RID, &o.Hostname, &o.IP, &o.Netmask, &o.Gateway, &o.DNS}
}

func (o *PDU) Key() int64 {
	return o.ID
}

func (o *PDU) SetID(id int64) {
	o.ID = id
}

func (o *PDU) TableName() string {
	return "pdus"
}

func (o *PDU) SelectFields() string {
	return "id,asset_tag,rid,hostname,ip_address,netmask,gateway,dns"
}
func (o *PDU) KeyField() string {
	return "id"
}

//
// VLAN DBObject interface functions
//
func (o *VLAN) InsertValues() []interface{} {
	return []interface{}{o.DID, o.Name, o.Gateway, o.Route, o.Netmask}
}

func (o *VLAN) UpdateValues() []interface{} {
	return []interface{}{o.DID, o.Name, o.Gateway, o.Route, o.Netmask, o.ID}
}

func (o *VLAN) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.DID, &o.Name, &o.Gateway, &o.Route, &o.Netmask}
}

func (o *VLAN) Key() int64 {
	return o.ID
}

func (o *VLAN) SetID(id int64) {
	o.ID = id
}

func (o *VLAN) TableName() string {
	return "vlans"
}

func (o *VLAN) SelectFields() string {
	return "id,did,name,gateway,route,netmask"
}
func (o *VLAN) KeyField() string {
	return "id"
}
