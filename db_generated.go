// generated by dbgen ; DO NOT EDIT

package main

import (
	"time"
)

//
// Contract DBObject interface functions
//
func (o *Contract) InsertValues() []interface{} {
	return []interface{}{o.Policy, o.Phone, o.VID}
}

func (o *Contract) UpdateValues() []interface{} {
	return []interface{}{o.Policy, o.Phone, o.VID, o.CID}
}

func (o *Contract) MemberPointers() []interface{} {
	return []interface{}{&o.CID, &o.Policy, &o.Phone, &o.VID}
}

func (o *Contract) Key() int64 {
	return o.CID
}

func (o *Contract) SetID(id int64) {
	o.CID = id
}

func (o *Contract) TableName() string {
	return "contracts"
}

func (o *Contract) SelectFields() string {
	return "cid,policy,phone,vid"
}

func (o *Contract) InsertFields() string {
	return "cid,policy,phone,vid"
}

func (o *Contract) KeyField() string {
	return "cid"
}

func (o *Contract) KeyName() string {
	return "CID"
}

func (o *Contract) ModifiedBy(user int64, t time.Time) {
}

//
// Device DBObject interface functions
//
func (o *Device) InsertValues() []interface{} {
	return []interface{}{o.VID, o.RU, o.Type, o.MgmtIP, o.MgmtMac, o.Modified, o.PrimaryIP, o.SerialNo, o.Hostname, o.Note, o.RID, o.Height, o.PrimaryMac, o.Model, o.AssetTag, o.UID}
}

func (o *Device) UpdateValues() []interface{} {
	return []interface{}{o.VID, o.RU, o.Type, o.MgmtIP, o.MgmtMac, o.Modified, o.PrimaryIP, o.SerialNo, o.Hostname, o.Note, o.RID, o.Height, o.PrimaryMac, o.Model, o.AssetTag, o.UID, o.DID}
}

func (o *Device) MemberPointers() []interface{} {
	return []interface{}{&o.DID, &o.VID, &o.RU, &o.Type, &o.MgmtIP, &o.MgmtMac, &o.Modified, &o.PrimaryIP, &o.SerialNo, &o.Hostname, &o.Note, &o.RID, &o.Height, &o.PrimaryMac, &o.Model, &o.AssetTag, &o.UID}
}

func (o *Device) Key() int64 {
	return o.DID
}

func (o *Device) SetID(id int64) {
	o.DID = id
}

func (o *Device) TableName() string {
	return "devices"
}

func (o *Device) SelectFields() string {
	return "did,vid,ru,device_type,mgmt_ip,mgmt_mac,modified,primary_ip,sn,hostname,note,rid,height,primary_mac,model,asset_tag,uid"
}

func (o *Device) InsertFields() string {
	return "did,vid,ru,device_type,mgmt_ip,mgmt_mac,modified,primary_ip,sn,hostname,note,rid,height,primary_mac,model,asset_tag,uid"
}

func (o *Device) KeyField() string {
	return "did"
}

func (o *Device) KeyName() string {
	return "DID"
}

func (o *Device) ModifiedBy(user int64, t time.Time) {
}

//
// Port DBObject interface functions
//
func (o *Port) InsertValues() []interface{} {
	return []interface{}{o.MAC, o.CableTag, o.SwitchPort, o.Modified, o.UID, o.DID, o.PortType}
}

func (o *Port) UpdateValues() []interface{} {
	return []interface{}{o.MAC, o.CableTag, o.SwitchPort, o.Modified, o.UID, o.DID, o.PortType, o.PID}
}

func (o *Port) MemberPointers() []interface{} {
	return []interface{}{&o.PID, &o.MAC, &o.CableTag, &o.SwitchPort, &o.Modified, &o.UID, &o.DID, &o.PortType}
}

func (o *Port) Key() int64 {
	return o.PID
}

func (o *Port) SetID(id int64) {
	o.PID = id
}

func (o *Port) TableName() string {
	return "ports"
}

func (o *Port) SelectFields() string {
	return "pid,mac,cable_tag,switch_port,modified,uid,did,port_type"
}

func (o *Port) InsertFields() string {
	return "pid,mac,cable_tag,switch_port,modified,uid,did,port_type"
}

func (o *Port) KeyField() string {
	return "pid"
}

func (o *Port) KeyName() string {
	return "PID"
}

func (o *Port) ModifiedBy(user int64, t time.Time) {
}

//
// IP DBObject interface functions
//
func (o *IP) InsertValues() []interface{} {
	return []interface{}{o.Modified, o.UID, o.DID, o.Type, o.Int}
}

func (o *IP) UpdateValues() []interface{} {
	return []interface{}{o.Modified, o.UID, o.DID, o.Type, o.Int, o.IID}
}

func (o *IP) MemberPointers() []interface{} {
	return []interface{}{&o.IID, &o.Modified, &o.UID, &o.DID, &o.Type, &o.Int}
}

func (o *IP) Key() int64 {
	return o.IID
}

func (o *IP) SetID(id int64) {
	o.IID = id
}

func (o *IP) TableName() string {
	return "ips"
}

func (o *IP) SelectFields() string {
	return "iid,modified,uid,did,ip_type,ip_int"
}

func (o *IP) InsertFields() string {
	return "iid,modified,uid,did,ip_type,ip_int"
}

func (o *IP) KeyField() string {
	return "iid"
}

func (o *IP) KeyName() string {
	return "IID"
}

func (o *IP) ModifiedBy(user int64, t time.Time) {
}

//
// User DBObject interface functions
//
func (o *User) InsertValues() []interface{} {
	return []interface{}{o.Login, o.First, o.Last, o.Email, o.Level}
}

func (o *User) UpdateValues() []interface{} {
	return []interface{}{o.Login, o.First, o.Last, o.Email, o.Level, o.ID}
}

func (o *User) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.Login, &o.First, &o.Last, &o.Email, &o.Level}
}

func (o *User) Key() int64 {
	return o.ID
}

func (o *User) SetID(id int64) {
	o.ID = id
}

func (o *User) TableName() string {
	return "users"
}

func (o *User) SelectFields() string {
	return "id,login,firstname,lastname,email,admin"
}

func (o *User) InsertFields() string {
	return "id,login,firstname,lastname,email,admin"
}

func (o *User) KeyField() string {
	return "id"
}

func (o *User) KeyName() string {
	return "ID"
}

func (o *User) ModifiedBy(user int64, t time.Time) {
}

//
// Document DBObject interface functions
//
func (o *Document) InsertValues() []interface{} {
	return []interface{}{o.RemoteAddr, o.UID, o.Modified, o.DID, o.Filename, o.Title}
}

func (o *Document) UpdateValues() []interface{} {
	return []interface{}{o.RemoteAddr, o.UID, o.Modified, o.DID, o.Filename, o.Title, o.ID}
}

func (o *Document) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.RemoteAddr, &o.UID, &o.Modified, &o.DID, &o.Filename, &o.Title}
}

func (o *Document) Key() int64 {
	return o.ID
}

func (o *Document) SetID(id int64) {
	o.ID = id
}

func (o *Document) TableName() string {
	return "documents"
}

func (o *Document) SelectFields() string {
	return "id,remote_addr,user_id,modified,did,filename,title"
}

func (o *Document) InsertFields() string {
	return "id,remote_addr,user_id,modified,did,filename,title"
}

func (o *Document) KeyField() string {
	return "id"
}

func (o *Document) KeyName() string {
	return "ID"
}

func (o *Document) ModifiedBy(user int64, t time.Time) {
}

//
// Vendor DBObject interface functions
//
func (o *Vendor) InsertValues() []interface{} {
	return []interface{}{o.UID, o.Modified, o.Address, o.City, o.State, o.Postal, o.Note, o.RemoteAddr, o.Name, o.WWW, o.Phone, o.Country}
}

func (o *Vendor) UpdateValues() []interface{} {
	return []interface{}{o.UID, o.Modified, o.Address, o.City, o.State, o.Postal, o.Note, o.RemoteAddr, o.Name, o.WWW, o.Phone, o.Country, o.VID}
}

func (o *Vendor) MemberPointers() []interface{} {
	return []interface{}{&o.VID, &o.UID, &o.Modified, &o.Address, &o.City, &o.State, &o.Postal, &o.Note, &o.RemoteAddr, &o.Name, &o.WWW, &o.Phone, &o.Country}
}

func (o *Vendor) Key() int64 {
	return o.VID
}

func (o *Vendor) SetID(id int64) {
	o.VID = id
}

func (o *Vendor) TableName() string {
	return "vendors"
}

func (o *Vendor) SelectFields() string {
	return "vid,user_id,modified,address,city,state,postal,note,remote_addr,name,www,phone,country"
}

func (o *Vendor) InsertFields() string {
	return "vid,user_id,modified,address,city,state,postal,note,remote_addr,name,www,phone,country"
}

func (o *Vendor) KeyField() string {
	return "vid"
}

func (o *Vendor) KeyName() string {
	return "VID"
}

func (o *Vendor) ModifiedBy(user int64, t time.Time) {
	o.UID = user
	o.Modified = t
}

//
// RMA DBObject interface functions
//
func (o *RMA) InsertValues() []interface{} {
	return []interface{}{o.Closed, o.DID, o.VID, o.UID, o.DCTicket, o.Receiving, o.Opened, o.Number, o.Note, o.Jira}
}

func (o *RMA) UpdateValues() []interface{} {
	return []interface{}{o.Closed, o.DID, o.VID, o.UID, o.DCTicket, o.Receiving, o.Opened, o.Number, o.Note, o.Jira, o.ID}
}

func (o *RMA) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.Closed, &o.DID, &o.VID, &o.UID, &o.DCTicket, &o.Receiving, &o.Opened, &o.Number, &o.Note, &o.Jira}
}

func (o *RMA) Key() int64 {
	return o.ID
}

func (o *RMA) SetID(id int64) {
	o.ID = id
}

func (o *RMA) TableName() string {
	return "rmas"
}

func (o *RMA) SelectFields() string {
	return "rma_id,date_closed,did,vid,user_id,dc_ticket,dc_receiving,date_opened,rma_no,note,jira"
}

func (o *RMA) InsertFields() string {
	return "rma_id,date_closed,did,vid,user_id,dc_ticket,dc_receiving,date_opened,rma_no,note,jira"
}

func (o *RMA) KeyField() string {
	return "rma_id"
}

func (o *RMA) KeyName() string {
	return "ID"
}

func (o *RMA) ModifiedBy(user int64, t time.Time) {
}

//
// Carrier DBObject interface functions
//
func (o *Carrier) InsertValues() []interface{} {
	return []interface{}{o.Name, o.URL, o.UID, o.Modified}
}

func (o *Carrier) UpdateValues() []interface{} {
	return []interface{}{o.Name, o.URL, o.UID, o.Modified, o.CarrierID}
}

func (o *Carrier) MemberPointers() []interface{} {
	return []interface{}{&o.CarrierID, &o.Name, &o.URL, &o.UID, &o.Modified}
}

func (o *Carrier) Key() int64 {
	return o.CarrierID
}

func (o *Carrier) SetID(id int64) {
	o.CarrierID = id
}

func (o *Carrier) TableName() string {
	return "carriers"
}

func (o *Carrier) SelectFields() string {
	return "cr_id,name,tracking_url,user_id,modified"
}

func (o *Carrier) InsertFields() string {
	return "cr_id,name,tracking_url,user_id,modified"
}

func (o *Carrier) KeyField() string {
	return "cr_id"
}

func (o *Carrier) KeyName() string {
	return "CarrierID"
}

func (o *Carrier) ModifiedBy(user int64, t time.Time) {
}

//
// Return DBObject interface functions
//
func (o *Return) InsertValues() []interface{} {
	return []interface{}{o.RMAID, o.CarrierID, o.Tracking, o.UID, o.Sent}
}

func (o *Return) UpdateValues() []interface{} {
	return []interface{}{o.RMAID, o.CarrierID, o.Tracking, o.UID, o.Sent, o.ReturnID}
}

func (o *Return) MemberPointers() []interface{} {
	return []interface{}{&o.ReturnID, &o.RMAID, &o.CarrierID, &o.Tracking, &o.UID, &o.Sent}
}

func (o *Return) Key() int64 {
	return o.ReturnID
}

func (o *Return) SetID(id int64) {
	o.ReturnID = id
}

func (o *Return) TableName() string {
	return "rma_returns"
}

func (o *Return) SelectFields() string {
	return "return_id,rma_id,cr_id,tracking_no,user_id,date_sent"
}

func (o *Return) InsertFields() string {
	return "return_id,rma_id,cr_id,tracking_no,user_id,date_sent"
}

func (o *Return) KeyField() string {
	return "return_id"
}

func (o *Return) KeyName() string {
	return "ReturnID"
}

func (o *Return) ModifiedBy(user int64, t time.Time) {
}

//
// Sent DBObject interface functions
//
func (o *Sent) InsertValues() []interface{} {
	return []interface{}{o.ReturnID, o.PID}
}

func (o *Sent) UpdateValues() []interface{} {
	return []interface{}{o.ReturnID, o.PID}
}

func (o *Sent) MemberPointers() []interface{} {
	return []interface{}{&o.ReturnID, &o.PID}
}

func (o *Sent) Key() int64 {
	return 0
}

func (o *Sent) SetID(id int64) {
}

func (o *Sent) TableName() string {
	return "rma_sent"
}

func (o *Sent) SelectFields() string {
	return "return_id,pid"
}

func (o *Sent) InsertFields() string {
	return "return_id,pid"
}

func (o *Sent) KeyField() string {
	return ""
}

func (o *Sent) KeyName() string {
	return ""
}

func (o *Sent) ModifiedBy(user int64, t time.Time) {
}

//
// Received DBObject interface functions
//
func (o *Received) InsertValues() []interface{} {
	return []interface{}{o.RMAID, o.PID, o.UID, o.TS}
}

func (o *Received) UpdateValues() []interface{} {
	return []interface{}{o.RMAID, o.PID, o.UID, o.TS}
}

func (o *Received) MemberPointers() []interface{} {
	return []interface{}{&o.RMAID, &o.PID, &o.UID, &o.TS}
}

func (o *Received) Key() int64 {
	return 0
}

func (o *Received) SetID(id int64) {
}

func (o *Received) TableName() string {
	return "rma_received"
}

func (o *Received) SelectFields() string {
	return "rma_id,pid,user_id,date_received"
}

func (o *Received) InsertFields() string {
	return "rma_id,pid,user_id,date_received"
}

func (o *Received) KeyField() string {
	return ""
}

func (o *Received) KeyName() string {
	return ""
}

func (o *Received) ModifiedBy(user int64, t time.Time) {
}

//
// Manufacturer DBObject interface functions
//
func (o *Manufacturer) InsertValues() []interface{} {
	return []interface{}{o.Name, o.AKA, o.URL, o.UID, o.Modified}
}

func (o *Manufacturer) UpdateValues() []interface{} {
	return []interface{}{o.Name, o.AKA, o.URL, o.UID, o.Modified, o.MID}
}

func (o *Manufacturer) MemberPointers() []interface{} {
	return []interface{}{&o.MID, &o.Name, &o.AKA, &o.URL, &o.UID, &o.Modified}
}

func (o *Manufacturer) Key() int64 {
	return o.MID
}

func (o *Manufacturer) SetID(id int64) {
	o.MID = id
}

func (o *Manufacturer) TableName() string {
	return "mfgr"
}

func (o *Manufacturer) SelectFields() string {
	return "mid,name,aka,url,user_id,modified"
}

func (o *Manufacturer) InsertFields() string {
	return "mid,name,aka,url,user_id,modified"
}

func (o *Manufacturer) KeyField() string {
	return "mid"
}

func (o *Manufacturer) KeyName() string {
	return "MID"
}

func (o *Manufacturer) ModifiedBy(user int64, t time.Time) {
	o.UID = user
	o.Modified = t
}

//
// PartType DBObject interface functions
//
func (o *PartType) InsertValues() []interface{} {
	return []interface{}{o.Name, o.UID, o.Modified}
}

func (o *PartType) UpdateValues() []interface{} {
	return []interface{}{o.Name, o.UID, o.Modified, o.TID}
}

func (o *PartType) MemberPointers() []interface{} {
	return []interface{}{&o.TID, &o.Name, &o.UID, &o.Modified}
}

func (o *PartType) Key() int64 {
	return o.TID
}

func (o *PartType) SetID(id int64) {
	o.TID = id
}

func (o *PartType) TableName() string {
	return "part_types"
}

func (o *PartType) SelectFields() string {
	return "tid,name,user_id,ts"
}

func (o *PartType) InsertFields() string {
	return "tid,name,user_id,ts"
}

func (o *PartType) KeyField() string {
	return "tid"
}

func (o *PartType) KeyName() string {
	return "TID"
}

func (o *PartType) ModifiedBy(user int64, t time.Time) {
	o.UID = user
	o.Modified = t
}

//
// SKU DBObject interface functions
//
func (o *SKU) InsertValues() []interface{} {
	return []interface{}{o.MID, o.TID, o.PartNumber, o.Description, o.UID, o.Modified}
}

func (o *SKU) UpdateValues() []interface{} {
	return []interface{}{o.MID, o.TID, o.PartNumber, o.Description, o.UID, o.Modified, o.KID}
}

func (o *SKU) MemberPointers() []interface{} {
	return []interface{}{&o.KID, &o.MID, &o.TID, &o.PartNumber, &o.Description, &o.UID, &o.Modified}
}

func (o *SKU) Key() int64 {
	return o.KID
}

func (o *SKU) SetID(id int64) {
	o.KID = id
}

func (o *SKU) TableName() string {
	return "skus"
}

func (o *SKU) SelectFields() string {
	return "kid,mid,tid,part_no,description,user_id,modified"
}

func (o *SKU) InsertFields() string {
	return "kid,mid,tid,part_no,description,user_id,modified"
}

func (o *SKU) KeyField() string {
	return "kid"
}

func (o *SKU) KeyName() string {
	return "KID"
}

func (o *SKU) ModifiedBy(user int64, t time.Time) {
	o.UID = user
	o.Modified = t
}

//
// Part DBObject interface functions
//
func (o *Part) InsertValues() []interface{} {
	return []interface{}{o.KID, o.DID, o.AssetTag, o.SID, o.RMAID, o.Location, o.Serial, o.UID, o.Modified}
}

func (o *Part) UpdateValues() []interface{} {
	return []interface{}{o.KID, o.DID, o.AssetTag, o.SID, o.RMAID, o.Location, o.Serial, o.UID, o.Modified, o.PID}
}

func (o *Part) MemberPointers() []interface{} {
	return []interface{}{&o.PID, &o.KID, &o.DID, &o.AssetTag, &o.SID, &o.RMAID, &o.Location, &o.Serial, &o.UID, &o.Modified}
}

func (o *Part) Key() int64 {
	return o.PID
}

func (o *Part) SetID(id int64) {
	o.PID = id
}

func (o *Part) TableName() string {
	return "parts"
}

func (o *Part) SelectFields() string {
	return "pid,kid,did,asset_tag,sid,rma_id,location,serial_no,user_id,modified"
}

func (o *Part) InsertFields() string {
	return "pid,kid,did,asset_tag,sid,rma_id,location,serial_no,user_id,modified"
}

func (o *Part) KeyField() string {
	return "pid"
}

func (o *Part) KeyName() string {
	return "PID"
}

func (o *Part) ModifiedBy(user int64, t time.Time) {
	o.UID = user
	o.Modified = t
}

//
// Datacenter DBObject interface functions
//
func (o *Datacenter) InsertValues() []interface{} {
	return []interface{}{o.Phone, o.PXEHost, o.Name, o.State, o.Address, o.DCMan, o.PXEUser, o.PXEPass, o.UID, o.Modified, o.City, o.Web, o.PXEKey, o.RemoteAddr}
}

func (o *Datacenter) UpdateValues() []interface{} {
	return []interface{}{o.Phone, o.PXEHost, o.Name, o.State, o.Address, o.DCMan, o.PXEUser, o.PXEPass, o.UID, o.Modified, o.City, o.Web, o.PXEKey, o.RemoteAddr, o.ID}
}

func (o *Datacenter) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.Phone, &o.PXEHost, &o.Name, &o.State, &o.Address, &o.DCMan, &o.PXEUser, &o.PXEPass, &o.UID, &o.Modified, &o.City, &o.Web, &o.PXEKey, &o.RemoteAddr}
}

func (o *Datacenter) Key() int64 {
	return o.ID
}

func (o *Datacenter) SetID(id int64) {
	o.ID = id
}

func (o *Datacenter) TableName() string {
	return "datacenters"
}

func (o *Datacenter) SelectFields() string {
	return "id,phone,pxehost,name,state,address,dcman,pxeuser,pxepass,user_id,modified,city,web,pxekey,remote_addr"
}

func (o *Datacenter) InsertFields() string {
	return "id,phone,pxehost,name,state,address,dcman,pxeuser,pxepass,user_id,modified,city,web,pxekey,remote_addr"
}

func (o *Datacenter) KeyField() string {
	return "id"
}

func (o *Datacenter) KeyName() string {
	return "ID"
}

func (o *Datacenter) ModifiedBy(user int64, t time.Time) {
	o.UID = user
	o.Modified = t
}

//
// DCView DBObject interface functions
//
func (o *DCView) InsertValues() []interface{} {
	return []interface{}{o.CPU, o.CPU_Speed, o.MemoryMB, o.Created, o.DID, o.Hostname, o.AssetNumber}
}

func (o *DCView) UpdateValues() []interface{} {
	return []interface{}{o.CPU, o.CPU_Speed, o.MemoryMB, o.Created, o.DID, o.Hostname, o.AssetNumber, o.ID}
}

func (o *DCView) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.CPU, &o.CPU_Speed, &o.MemoryMB, &o.Created, &o.DID, &o.Hostname, &o.AssetNumber}
}

func (o *DCView) Key() int64 {
	return o.ID
}

func (o *DCView) SetID(id int64) {
	o.ID = id
}

func (o *DCView) TableName() string {
	return "dcview"
}

func (o *DCView) SelectFields() string {
	return "id,cpu_id,cpu_speed,memory,created,datacenter,hostname,asset_number"
}

func (o *DCView) InsertFields() string {
	return "id,cpu_id,cpu_speed,memory,created,datacenter,hostname,asset_number"
}

func (o *DCView) KeyField() string {
	return "id"
}

func (o *DCView) KeyName() string {
	return "ID"
}

func (o *DCView) ModifiedBy(user int64, t time.Time) {
}

//
// ServerVMs DBObject interface functions
//
func (o *ServerVMs) InsertValues() []interface{} {
	return []interface{}{o.DC, o.Hostname, o.VMList, o.IDList}
}

func (o *ServerVMs) UpdateValues() []interface{} {
	return []interface{}{o.DC, o.Hostname, o.VMList, o.IDList, o.ID}
}

func (o *ServerVMs) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.DC, &o.Hostname, &o.VMList, &o.IDList}
}

func (o *ServerVMs) Key() int64 {
	return o.ID
}

func (o *ServerVMs) SetID(id int64) {
	o.ID = id
}

func (o *ServerVMs) TableName() string {
	return "servervms"
}

func (o *ServerVMs) SelectFields() string {
	return "id,dc,hostname,vms,ids"
}

func (o *ServerVMs) InsertFields() string {
	return "id,dc,hostname,vms,ids"
}

func (o *ServerVMs) KeyField() string {
	return "id"
}

func (o *ServerVMs) KeyName() string {
	return "ID"
}

func (o *ServerVMs) ModifiedBy(user int64, t time.Time) {
}

//
// RackUnit DBObject interface functions
//
func (o *RackUnit) InsertValues() []interface{} {
	return []interface{}{o.Hostname, o.Rack, o.SID, o.RID, o.RU, o.Internal, o.Note, o.Alias, o.AssetTag, o.SerialNo, o.IPMI, o.DC, o.NID, o.Height}
}

func (o *RackUnit) UpdateValues() []interface{} {
	return []interface{}{o.Hostname, o.Rack, o.SID, o.RID, o.RU, o.Internal, o.Note, o.Alias, o.AssetTag, o.SerialNo, o.IPMI, o.DC, o.NID, o.Height}
}

func (o *RackUnit) MemberPointers() []interface{} {
	return []interface{}{&o.Hostname, &o.Rack, &o.SID, &o.RID, &o.RU, &o.Internal, &o.Note, &o.Alias, &o.AssetTag, &o.SerialNo, &o.IPMI, &o.DC, &o.NID, &o.Height}
}

func (o *RackUnit) Key() int64 {
	return 0
}

func (o *RackUnit) SetID(id int64) {
}

func (o *RackUnit) TableName() string {
	return "rackunits"
}

func (o *RackUnit) SelectFields() string {
	return "hostname,rack,sid,rid,ru,internal,note,alias,asset_tag,sn,ipmi,dc,nid,height"
}

func (o *RackUnit) InsertFields() string {
	return "hostname,rack,sid,rid,ru,internal,note,alias,asset_tag,sn,ipmi,dc,nid,height"
}

func (o *RackUnit) KeyField() string {
	return ""
}

func (o *RackUnit) KeyName() string {
	return ""
}

func (o *RackUnit) ModifiedBy(user int64, t time.Time) {
}

//
// Server DBObject interface functions
//
func (o *Server) InsertValues() []interface{} {
	return []interface{}{o.RU, o.IPPublic, o.PortEth1, o.MacPort0, o.Modified, o.IPIpmi, o.PartNo, o.PortIpmi, o.CableEth0, o.CableEth1, o.Alias, o.MacIPMI, o.CPU, o.Profile, o.Assigned, o.CableIpmi, o.AssetTag, o.IPInternal, o.UID, o.PortEth0, o.RemoteAddr, o.Height, o.Hostname, o.SerialNo, o.MacPort1, o.RID, o.Note}
}

func (o *Server) UpdateValues() []interface{} {
	return []interface{}{o.RU, o.IPPublic, o.PortEth1, o.MacPort0, o.Modified, o.IPIpmi, o.PartNo, o.PortIpmi, o.CableEth0, o.CableEth1, o.Alias, o.MacIPMI, o.CPU, o.Profile, o.Assigned, o.CableIpmi, o.AssetTag, o.IPInternal, o.UID, o.PortEth0, o.RemoteAddr, o.Height, o.Hostname, o.SerialNo, o.MacPort1, o.RID, o.Note, o.ID}
}

func (o *Server) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.RU, &o.IPPublic, &o.PortEth1, &o.MacPort0, &o.Modified, &o.IPIpmi, &o.PartNo, &o.PortIpmi, &o.CableEth0, &o.CableEth1, &o.Alias, &o.MacIPMI, &o.CPU, &o.Profile, &o.Assigned, &o.CableIpmi, &o.AssetTag, &o.IPInternal, &o.UID, &o.PortEth0, &o.RemoteAddr, &o.Height, &o.Hostname, &o.SerialNo, &o.MacPort1, &o.RID, &o.Note}
}

func (o *Server) Key() int64 {
	return o.ID
}

func (o *Server) SetID(id int64) {
	o.ID = id
}

func (o *Server) TableName() string {
	return "servers"
}

func (o *Server) SelectFields() string {
	return "id,ru,ip_public,port_eth1,mac_eth0,modified,ip_ipmi,vendor_sku,port_ipmi,cable_eth0,cable_eth1,alias,mac_ipmi,cpu,profile,assigned,cable_ipmi,asset_tag,ip_internal,uid,port_eth0,remote_addr,height,hostname,sn,mac_eth1,rid,note"
}

func (o *Server) InsertFields() string {
	return "id,ru,ip_public,port_eth1,mac_eth0,modified,ip_ipmi,vendor_sku,port_ipmi,cable_eth0,cable_eth1,alias,mac_ipmi,cpu,profile,assigned,cable_ipmi,asset_tag,ip_internal,uid,port_eth0,remote_addr,height,hostname,sn,mac_eth1,rid,note"
}

func (o *Server) KeyField() string {
	return "id"
}

func (o *Server) KeyName() string {
	return "ID"
}

func (o *Server) ModifiedBy(user int64, t time.Time) {
	o.UID = user
	o.Modified = t
}

//
// Router DBObject interface functions
//
func (o *Router) InsertValues() []interface{} {
	return []interface{}{o.RU, o.Model, o.PartNo, o.RemoteAddr, o.Hostname, o.Make, o.Note, o.UID, o.Height, o.AssetTag, o.SerialNo, o.Modified, o.RID, o.MgmtIP}
}

func (o *Router) UpdateValues() []interface{} {
	return []interface{}{o.RU, o.Model, o.PartNo, o.RemoteAddr, o.Hostname, o.Make, o.Note, o.UID, o.Height, o.AssetTag, o.SerialNo, o.Modified, o.RID, o.MgmtIP, o.ID}
}

func (o *Router) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.RU, &o.Model, &o.PartNo, &o.RemoteAddr, &o.Hostname, &o.Make, &o.Note, &o.UID, &o.Height, &o.AssetTag, &o.SerialNo, &o.Modified, &o.RID, &o.MgmtIP}
}

func (o *Router) Key() int64 {
	return o.ID
}

func (o *Router) SetID(id int64) {
	o.ID = id
}

func (o *Router) TableName() string {
	return "routers"
}

func (o *Router) SelectFields() string {
	return "id,ru,model,sku,remote_addr,hostname,make,note,uid,height,asset_tag,sn,modified,rid,ip_mgmt"
}

func (o *Router) InsertFields() string {
	return "id,ru,model,sku,remote_addr,hostname,make,note,uid,height,asset_tag,sn,modified,rid,ip_mgmt"
}

func (o *Router) KeyField() string {
	return "id"
}

func (o *Router) KeyName() string {
	return "ID"
}

func (o *Router) ModifiedBy(user int64, t time.Time) {
}

//
// Rack DBObject interface functions
//
func (o *Rack) InsertValues() []interface{} {
	return []interface{}{o.RUs, o.Label, o.VendorID, o.XPos, o.YPos, o.UID, o.TS, o.DID}
}

func (o *Rack) UpdateValues() []interface{} {
	return []interface{}{o.RUs, o.Label, o.VendorID, o.XPos, o.YPos, o.UID, o.TS, o.DID, o.ID}
}

func (o *Rack) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.RUs, &o.Label, &o.VendorID, &o.XPos, &o.YPos, &o.UID, &o.TS, &o.DID}
}

func (o *Rack) Key() int64 {
	return o.ID
}

func (o *Rack) SetID(id int64) {
	o.ID = id
}

func (o *Rack) TableName() string {
	return "racks"
}

func (o *Rack) SelectFields() string {
	return "id,rackunits,rack,vendor_id,x_pos,y_pos,uid,ts,did"
}

func (o *Rack) InsertFields() string {
	return "id,rackunits,rack,vendor_id,x_pos,y_pos,uid,ts,did"
}

func (o *Rack) KeyField() string {
	return "id"
}

func (o *Rack) KeyName() string {
	return "ID"
}

func (o *Rack) ModifiedBy(user int64, t time.Time) {
}

//
// RackNet DBObject interface functions
//
func (o *RackNet) InsertValues() []interface{} {
	return []interface{}{o.VID, o.MinIP, o.LastIP, o.RID, o.Actual, o.Subnet, o.MaxIP, o.FirstIP, o.CIDR}
}

func (o *RackNet) UpdateValues() []interface{} {
	return []interface{}{o.VID, o.MinIP, o.LastIP, o.RID, o.Actual, o.Subnet, o.MaxIP, o.FirstIP, o.CIDR}
}

func (o *RackNet) MemberPointers() []interface{} {
	return []interface{}{&o.VID, &o.MinIP, &o.LastIP, &o.RID, &o.Actual, &o.Subnet, &o.MaxIP, &o.FirstIP, &o.CIDR}
}

func (o *RackNet) Key() int64 {
	return 0
}

func (o *RackNet) SetID(id int64) {
}

func (o *RackNet) TableName() string {
	return "racknet"
}

func (o *RackNet) SelectFields() string {
	return "vid,min_ip,last_ip,rid,actual,subnet,max_ip,first_ip,cidr"
}

func (o *RackNet) InsertFields() string {
	return "vid,min_ip,last_ip,rid,actual,subnet,max_ip,first_ip,cidr"
}

func (o *RackNet) KeyField() string {
	return ""
}

func (o *RackNet) KeyName() string {
	return ""
}

func (o *RackNet) ModifiedBy(user int64, t time.Time) {
}

//
// VM DBObject interface functions
//
func (o *VM) InsertValues() []interface{} {
	return []interface{}{o.UID, o.Hostname, o.Public, o.VIP, o.Modified, o.RemoteAddr, o.SID, o.Private, o.Profile, o.Note}
}

func (o *VM) UpdateValues() []interface{} {
	return []interface{}{o.UID, o.Hostname, o.Public, o.VIP, o.Modified, o.RemoteAddr, o.SID, o.Private, o.Profile, o.Note, o.ID}
}

func (o *VM) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.UID, &o.Hostname, &o.Public, &o.VIP, &o.Modified, &o.RemoteAddr, &o.SID, &o.Private, &o.Profile, &o.Note}
}

func (o *VM) Key() int64 {
	return o.ID
}

func (o *VM) SetID(id int64) {
	o.ID = id
}

func (o *VM) TableName() string {
	return "vms"
}

func (o *VM) SelectFields() string {
	return "id,uid,hostname,public,vip,modified,remote_addr,sid,private,profile,note"
}

func (o *VM) InsertFields() string {
	return "id,uid,hostname,public,vip,modified,remote_addr,sid,private,profile,note"
}

func (o *VM) KeyField() string {
	return "id"
}

func (o *VM) KeyName() string {
	return "ID"
}

func (o *VM) ModifiedBy(user int64, t time.Time) {
}

//
// Orphan DBObject interface functions
//
func (o *Orphan) InsertValues() []interface{} {
	return []interface{}{o.DC, o.Hostname, o.Private, o.Public, o.VIP, o.Note}
}

func (o *Orphan) UpdateValues() []interface{} {
	return []interface{}{o.DC, o.Hostname, o.Private, o.Public, o.VIP, o.Note, o.ID}
}

func (o *Orphan) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.DC, &o.Hostname, &o.Private, &o.Public, &o.VIP, &o.Note}
}

func (o *Orphan) Key() int64 {
	return o.ID
}

func (o *Orphan) SetID(id int64) {
	o.ID = id
}

func (o *Orphan) TableName() string {
	return "vmbad"
}

func (o *Orphan) SelectFields() string {
	return "rowid,dc,hostname,private,public,vip,note"
}

func (o *Orphan) InsertFields() string {
	return "rowid,dc,hostname,private,public,vip,note"
}

func (o *Orphan) KeyField() string {
	return "rowid"
}

func (o *Orphan) KeyName() string {
	return "ID"
}

func (o *Orphan) ModifiedBy(user int64, t time.Time) {
}

//
// Audit DBObject interface functions
//
func (o *Audit) InsertValues() []interface{} {
	return []interface{}{o.IP, o.FQDN, o.CPU, o.IPMI_IP, o.Eth0, o.Eth1, o.SN, o.IPs, o.Mem, o.VMs, o.Kernel, o.Release, o.Hostname, o.Asset, o.IPMI_MAC}
}

func (o *Audit) UpdateValues() []interface{} {
	return []interface{}{o.IP, o.FQDN, o.CPU, o.IPMI_IP, o.Eth0, o.Eth1, o.SN, o.IPs, o.Mem, o.VMs, o.Kernel, o.Release, o.Hostname, o.Asset, o.IPMI_MAC}
}

func (o *Audit) MemberPointers() []interface{} {
	return []interface{}{&o.IP, &o.FQDN, &o.CPU, &o.IPMI_IP, &o.Eth0, &o.Eth1, &o.SN, &o.IPs, &o.Mem, &o.VMs, &o.Kernel, &o.Release, &o.Hostname, &o.Asset, &o.IPMI_MAC}
}

func (o *Audit) Key() int64 {
	return 0
}

func (o *Audit) SetID(id int64) {
}

func (o *Audit) TableName() string {
	return "auditing"
}

func (o *Audit) SelectFields() string {
	return "remote_addr,fqdn,cpu,ipmi_ip,eth0,eth1,sn,ips,mem,vms,kernel,release,hostname,asset,ipmi_mac"
}

func (o *Audit) InsertFields() string {
	return "remote_addr,fqdn,cpu,ipmi_ip,eth0,eth1,sn,ips,mem,vms,kernel,release,hostname,asset,ipmi_mac"
}

func (o *Audit) KeyField() string {
	return ""
}

func (o *Audit) KeyName() string {
	return ""
}

func (o *Audit) ModifiedBy(user int64, t time.Time) {
}

//
// PDU DBObject interface functions
//
func (o *PDU) InsertValues() []interface{} {
	return []interface{}{o.RID, o.Hostname, o.IP, o.Netmask, o.Gateway, o.DNS, o.AssetTag}
}

func (o *PDU) UpdateValues() []interface{} {
	return []interface{}{o.RID, o.Hostname, o.IP, o.Netmask, o.Gateway, o.DNS, o.AssetTag, o.ID}
}

func (o *PDU) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.RID, &o.Hostname, &o.IP, &o.Netmask, &o.Gateway, &o.DNS, &o.AssetTag}
}

func (o *PDU) Key() int64 {
	return o.ID
}

func (o *PDU) SetID(id int64) {
	o.ID = id
}

func (o *PDU) TableName() string {
	return "pdus"
}

func (o *PDU) SelectFields() string {
	return "id,rid,hostname,ip_address,netmask,gateway,dns,asset_tag"
}

func (o *PDU) InsertFields() string {
	return "id,rid,hostname,ip_address,netmask,gateway,dns,asset_tag"
}

func (o *PDU) KeyField() string {
	return "id"
}

func (o *PDU) KeyName() string {
	return "ID"
}

func (o *PDU) ModifiedBy(user int64, t time.Time) {
}

//
// VProfile DBObject interface functions
//
func (o *VProfile) InsertValues() []interface{} {
	return []interface{}{o.Name}
}

func (o *VProfile) UpdateValues() []interface{} {
	return []interface{}{o.Name, o.VPID}
}

func (o *VProfile) MemberPointers() []interface{} {
	return []interface{}{&o.VPID, &o.Name}
}

func (o *VProfile) Key() int64 {
	return o.VPID
}

func (o *VProfile) SetID(id int64) {
	o.VPID = id
}

func (o *VProfile) TableName() string {
	return "vlan_profiles"
}

func (o *VProfile) SelectFields() string {
	return "vpid,name"
}

func (o *VProfile) InsertFields() string {
	return "vpid,name"
}

func (o *VProfile) KeyField() string {
	return "vpid"
}

func (o *VProfile) KeyName() string {
	return "VPID"
}

func (o *VProfile) ModifiedBy(user int64, t time.Time) {
}

//
// VLAN DBObject interface functions
//
func (o *VLAN) InsertValues() []interface{} {
	return []interface{}{o.Gateway, o.Route, o.Netmask, o.DID, o.Name, o.Profile}
}

func (o *VLAN) UpdateValues() []interface{} {
	return []interface{}{o.Gateway, o.Route, o.Netmask, o.DID, o.Name, o.Profile, o.ID}
}

func (o *VLAN) MemberPointers() []interface{} {
	return []interface{}{&o.ID, &o.Gateway, &o.Route, &o.Netmask, &o.DID, &o.Name, &o.Profile}
}

func (o *VLAN) Key() int64 {
	return o.ID
}

func (o *VLAN) SetID(id int64) {
	o.ID = id
}

func (o *VLAN) TableName() string {
	return "vlans"
}

func (o *VLAN) SelectFields() string {
	return "id,gateway,route,netmask,did,name,profile"
}

func (o *VLAN) InsertFields() string {
	return "id,gateway,route,netmask,did,name,profile"
}

func (o *VLAN) KeyField() string {
	return "id"
}

func (o *VLAN) KeyName() string {
	return "ID"
}

func (o *VLAN) ModifiedBy(user int64, t time.Time) {
}
